
// =============================================================================
// Types
//
// Types identify the redux actions.
//
export enum Type {
  // Set the root of the current mono repo
  SET_ROOT = 'SET_ROOT',
  // Actions that we're not concerned with in our reducer
  UNDEFINED = 'UNDEFINED',
};

// =============================================================================
// Actions
//
// Define the shapes our actions.
//
export interface Action<T extends Type> {
  type: T
}

export interface ActionPayload<T extends Type, P> {
  type: T
  payload: P
}

export function actionCreator<T extends Type>(type: T): Action<T>;
export function actionCreator<T extends Type, P>(type: T, payload: P): ActionPayload<T, P>;
export function actionCreator<T extends Type, P>(type: T, payload?: P) {
  return payload === undefined ? { type } : { type, payload };
}

export interface SetRootAction {
  type: Type.SET_ROOT,
  payload: string,
}

export interface OtherAction {
  type: Type.UNDEFINED,
  payload: string,
}

export type Actions =
  SetRootAction

// =============================================================================
// Model
//
// Define the shapes our model.
//
export interface Model {
  rootPackage: string,
}
